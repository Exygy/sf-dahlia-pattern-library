// Button mixins
// Base button placeholder

%button {
  font-family: $font-family;
  -webkit-font-smoothing: antialiased;
  // letter-spacing: .15em;
  display: inline-block;
  font-weight: bold;
  line-height: normal;
  padding: rem-calc(16);
  text-decoration: none;
  white-space: nowrap;
  text-transform: normal;
  text-align: center;
}

// Mixins for buttons: https://github.com/Riccardo-Zanutta/buttons-collection.scss
// 
// Base Theme

@mixin btn($color: $base-button-color, $bg: $base-button-bg, $class: "") {
  .btn#{$class} {
    @extend %button;
    color: $color;
    background-color: $bg; 
    margin-bottom: 1.5em;
    -webkit-tap-highlight-color: transparent;
    transition: background-color .3s;

    &:link,
    &:visited {
      @extend .btn#{$class};
    }

    &:hover, 
    &:focus { 
        text-decoration: none;
        background-color: darken($bg, 5%);
    }
    &:active {  
        background-color: lighten($bg, 5%);
    }
  }
}

// Flat theme

@mixin btn_flat($color: #fff, $bg: #0074d9, $class: "") {
    .btn-flat#{$class} {
        @extend %button; 
        position: relative;
        color: $color;
        background-color: $bg;
        box-shadow: 0px 4px darken($bg, 10%);
        margin-bottom: 1.5em;
        -webkit-tap-highlight-color: transparent;
        transition: all .3s;
    
        &:link,
        &:visited {
            @extend .btn-flat#{$class};
        }
        &:hover, &:focus { 
            text-decoration: none;
            background-color: darken($bg, 10%);
            box-shadow: 0px 4px darken($bg, 20%);
        }
        &:active {  
            top: 3px;
            outline: 0;
            background-image: none;
        }
    }
}

// Ghost theme

@mixin btn_ghost($border-color: #555, $color: #fff, $class: "") {
  .btn-ghost#{$class} { 
    @extend %button;
    color: $border-color;
    border: 2px solid $border-color;
    margin-bottom: .5em;
    padding: rem-calc(12);
    background-color: rgb(255, 255, 255);
    background-color: rgba(255, 255, 255, 0);
    -webkit-tap-highlight-color: transparent;
    transition: all .3s;
    
    &:link, 
    &:visited {
      @extend .btn-ghost#{$class};
    }

    &:hover, &:focus { 
      background-color: darken($border-color, 10%);
      border-color: darken($border-color, 10%);
      color: $color;
      transition: border-color .3s, color .3s, background-color .3s;
    }

    &:active { 
      background-color: darken($border-color, 18%);
      border-color: darken($border-color, 18%);
      color: $color;
      transition: background-color .1s, color .1s, border .1s;
    }
  }
}

// Ghost light theme

@mixin btn_ghost_light {
    .btn-ghost-light {
      @extend %button;
      border: 2px solid rgba(255, 255, 255, 0.7);
      margin-bottom: .5em;
      background-color: rgb(255, 255, 255);
      background-color: rgba(255, 255, 255, 0);
      color: rgba(255, 255, 255, 0.7);
      -webkit-tap-highlight-color: transparent;
      transition: all .3s;
    
        &:link, 
        &:visited {
            @extend .btn-ghost-light;
        }

        &:hover, &:focus { 
            border-color: #fff;
            color: #383838;
            background-color: #fff;
        }
        &:active { 
            background-color: darken(#fff, 8%);
            color: #383838;
        }
    }
}

// 3D Theme

@mixin btn_3d($color: $base-button-color, $bg: $base-button-bg, $class: "") {
    .btn-3d#{$class} {
      @extend %button;
      background-color: $bg;
      color: $color;
      box-shadow: 4px 4px 0px lighten($bg, 30%);
      position: relative;
      top: 0px;
      left: 0px;
      -webkit-tap-highlight-color: transparent;
      transition: all .3s;

      &:link, &:visited {
        @extend .btn-3d#{$class};
      }

      &:hover, &:focus {
        background: darken($bg, 10%);
      }

      &:active {
        top: 4px;
        left: 4px;
        box-shadow: 0px 0px 0px lighten($bg, 30%)
      }
    }
}

// Media Queries Mixin.
@mixin breakpoint($point) {
  @if $point == small {
    @media only screen and (min-width: 768px) { @content; }
  }
  @else if $point == medium {
    @media only screen and (min-width: 992px) { @content; }
  }
  @else if $point == large {
    @media only screen and (min-width: 1200px)  { @content; }
  }
  @else if $point == tel {
    @media only screen and (max-width: 590px) { @content }
  }
  @else if $point == 1300 {
    @media (max-width: 1300px) { @content; }
  }
  @else if $point == 715 {
    @media (max-width: 715px) { @content; }
  }
}
// @include breakpoint(large) { @content }


// display:block on a certain breakpoint for buttons

@mixin blockbreak {
    @include breakpoint(tel) {
      display: block;
      width: 100%;
    }
}