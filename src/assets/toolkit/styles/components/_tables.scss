$table-padding-small: .5rem;
$table-value-weight: 600;

table {
  width: 100%;

  thead {
    tr {
      th {
        font-weight: $table-value-weight;

        border-bottom: 1px solid $primary;
        text-transform: uppercase;

        @media #{$small-only} {
          padding-left: $table-padding-small;
          padding-right: $table-padding-small;
        }  
      }
    }
  }  

  tbody { 
    tr {
      td {
        font-weight: $table-value-weight;

        @media #{$small-only} {
          padding-left: $table-padding-small;
          padding-right: $table-padding-small;
        }
      }
    }
  }

  small {
    font-weight: 400;  
  }
}


// More practical CSS...
// using mobile first method (IE8,7 requires respond.js polyfill https://github.com/scottjehl/Respond)

.table-flex {

  tr {
    &:nth-of-type(even) {
      @media #{$small-only} {
        background: transparent;
      }  
    }
  }
  
  th {
    @media #{$small-only} { 
      @include sr-only();  
    }
  }
  
  td {
    display: block;

    @media #{$small-only} {
      padding-bottom: .5rem;
      padding-left: 1rem;
      padding-right: 1rem;
      padding-top: .5rem;
      text-align: right;

      &:first-child {
        padding-top: 1rem;
      }

      &:last-child {
        padding-bottom: 1rem;
      }

      &:nth-of-type(odd) {
        background-color: $dust;
      }

      &.tr {
        @include responsive-text-size('base');
        background: transparent;
        text-align: left;

        &:before {
          display: none;
        }
      }

      .h-small {
        @include h-caps-lined();
        color: $oil;
        padding-bottom: .5rem;
      }
    }

    &:before {
      content: attr(data-th)""; // who knew you could do this? The internet, that's who.
      color: $oil;
      display: block;
      float: left;
      font-family: $alt-font-family;
      font-weight: 700;
      text-align: left;

      // optional stuff to make it look nicer
      width: 8.5rem; // magic number :( adjust according to your own content
      
      @media #{$small-only} {
        @include responsive-text-size('tiny');
        text-transform: uppercase;
        letter-spacing: $small-header-spacing;
      }  

      @media #{$medium-up} {
        display: none;
      }
    }
  }
  
  th, td {
    @media #{$medium-up} {
      display: table-cell;
    }
  }
}

// Result set
// List psuedo table

.result-set {
  width: 100%;
  overflow: hidden;
  
  li {
    overflow: hidden;
    padding: .5rem;
    border-bottom: 1px solid $smoke;
    position: relative;
    width: 100%;

    .right {
      display: inline-block;
      width: 50%;
    }
  }
}
